name: Build and Push Docker Image, Deploy to EC2

on:
  push:
    branches:
      - production
      - pre-production

# These permissions are needed to interact with GitHub's OIDC Token endpoint.
permissions:
  id-token: write
  contents: read

env:
  DOCKERHUB_USERNAME: ${{ secrets.DOCKERHUB_USERNAME }}  

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push
        uses: docker/build-push-action@v5
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ secrets.DOCKERHUB_TAGS }}amd-arm
  
  deploy:    
    needs: build
    runs-on: ubuntu-latest    

    steps:
      - name: Checkout the repo
        uses: actions/checkout@v4

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v4
        with:
          role-to-assume: ${{ secrets.ROLE_TO_ASSUME }}
          aws-region: ${{ vars.AWS_REGION }}
      
        # Deploy to AWS EC2 Instance
      - name: Deploy to AWS EC2 Instance
        run: |
          aws sts get-caller-identity
          commit_hash=`git rev-parse HEAD`
          aws deploy create-deployment --application-name ia-test --deployment-group-name ia-test-deployment-group --revision revisionType=GitHub --github-location repository=${{ vars.OWNER_NAME }}/${{ vars.REPOSITORY_NAME }},commitId=$commit_hash --ignore-application-stop-failures
      